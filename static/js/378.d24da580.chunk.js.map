{"version":3,"file":"static/js/378.d24da580.chunk.js","mappings":"iPAEaA,E,QAAqBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6I,SCmC7C,EAhCqB,WACnB,IAAMC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAClBG,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,MAACV,EAAkB,CAACW,SAdD,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBP,GACEQ,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACP,EAG8CC,aAAa,MAAKC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,SAAOC,QAAStB,EAAYoB,SAAC,cAC7BC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOV,KAAK,OAAOW,GAAIxB,EAAayB,UAAQ,KACxDJ,EAAAA,EAAAA,KAAA,SAAOC,QAASpB,EAAakB,SAAC,WAC9BC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,QAAQV,KAAK,QAAQW,GAAItB,EAAcuB,UAAQ,KAC3DJ,EAAAA,EAAAA,KAAA,SAAOC,QAASnB,EAAgBiB,SAAC,cACjCC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,WAAWV,KAAK,WAAWW,GAAIrB,EAAiBsB,UAAQ,KACpEJ,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,eAG5B,EChCe,SAASM,IACtB,OACEpB,EAAAA,EAAAA,MAAA,OAAAc,SAAA,EACEC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAAP,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACO,EAAY,MAGnB,C","sources":["components/RegisterForm/styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterFormStyled = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 20px 0;\n  padding: 20px;\n  border: solid black 1px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { RegisterFormStyled } from './styled';\n\nconst RegisterForm = () => {\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <RegisterFormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n      <label htmlFor={nameInputId}>Username</label>\n      <input type=\"text\" name=\"name\" id={nameInputId} required />\n      <label htmlFor={emailInputId}>Email</label>\n      <input type=\"email\" name=\"email\" id={emailInputId} required />\n      <label htmlFor={passwordInputId}>Password</label>\n      <input type=\"password\" name=\"password\" id={passwordInputId} required />\n      <button type=\"submit\">Register</button>\n    </RegisterFormStyled>\n  );\n};\n\nexport default RegisterForm;\n","import { Helmet } from 'react-helmet';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterFormStyled","styled","_templateObject","_taggedTemplateLiteral","nameInputId","nanoid","emailInputId","passwordInputId","dispatch","useDispatch","_jsxs","onSubmit","event","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","children","_jsx","htmlFor","type","id","required","Register","Helmet","RegisterForm"],"sourceRoot":""}